---
version: "3"

includes:
  github: "https://raw.githubusercontent.com/CowDogMoo/taskfile-templates/main/github/Taskfile.yaml"
  pre-commit: "https://raw.githubusercontent.com/CowDogMoo/taskfile-templates/main/pre-commit/Taskfile.yaml"
  renovate: "https://raw.githubusercontent.com/CowDogMoo/taskfile-templates/main/renovate/Taskfile.yaml"

vars:
  API_DIR: "."

tasks:
  default:
    desc: List all available tasks
    cmds:
      - task --list --sort none

  # Setup and initialization tasks
  check-command:
    internal: true
    vars:
      COMMAND: '{{.CLI_ARGS}}'
    cmds:
      - |
        command -v {{.COMMAND}} >/dev/null 2>&1 || (echo "Command '{{.COMMAND}}' not found. Please install it." && exit 1)

  check-dependencies:
    internal: true
    cmds:
      - task: check-command
        vars:
          CLI_ARGS: docker
      - task: check-command
        vars:
          CLI_ARGS: python3
      - task: check-command
        vars:
          CLI_ARGS: ruby

  setup-env:
    internal: true
    cmds:
      - cp -n .env.example .env || true

  get-dotenv-value:
    internal: true
    vars:
      KEY: '{{.CLI_ARGS}}'
    cmds:
      - grep '^{{.KEY}}=' .env | sed 's/^{{.KEY}}=//;s/^"//;s/"$//'

  deactivate:
    internal: true
    cmds:
      - |
        if [ -n "${VIRTUAL_ENV:-}" ]; then
          echo "Deactivated venv - try again."
          deactivate
        fi

  setup-git-hooks:
    desc: Set up Git hooks
    cmds:
      - |
        #!/bin/bash
        set -e
        mkdir -p .git/hooks
        ln -sf .hooks/post_merge.sh .git/hooks/post-merge
        chmod +x .hooks/post_merge.sh
        echo "Post-merge git hooks successfully installed!"

  init:
    desc: Initialize the project
    deps: [check-dependencies]
    cmds:
      - task: setup-env
      - task: setup-git-hooks
      - uv sync
      - task: pre-commit:install-pc-hooks
      - echo "Project is ready to go! ðŸš€"

  # Tools and pre-commit tasks
  run-pre-commit:
    desc: Run pre-commit hooks on all files
    cmds:
      - task: pre-commit:update-hooks
      - task: pre-commit:clear-cache
      - task: pre-commit:run-hooks

  clean:
    desc: Clean Python artifacts and cache directories
    cmds:
      - |
        find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
        find . -type f -name "*.pyc" -delete
        find . -type f -name "*.pyo" -delete
        find . -type f -name "*.pyd" -delete
        rm -rf .coverage htmlcov/ .pytest_cache/ .mypy_cache/ build/ dist/ ./*.egg-info/

  # UV and API tasks
  uv:
    desc: Run uv in the API directory
    vars:
      ARGS: '{{.CLI_ARGS}}'
    cmds:
      - cd {{.API_DIR}} && export PYTHONPATH="$(pwd)" && uv run {{.ARGS}}

  mypy:
    desc: Run type checking with mypy
    cmds:
      - cd {{.API_DIR}} && export PYTHONPATH="$(pwd)" && uv run mypy .

  ruff:
    desc: Run linting and formatting with ruff
    cmds:
      - cd {{.API_DIR}} && export PYTHONPATH="$(pwd)" && uv run ruff check .
      - cd {{.API_DIR}} && export PYTHONPATH="$(pwd)" && uv run ruff format .

  pytest:
    desc: Run tests with pytest and coverage reporting
    vars:
      ARGS: '{{default "--cov=. --cov-report=term-missing" .CLI_ARGS}}'
    cmds:
      - cd {{.API_DIR}} && export PYTHONPATH="$(pwd)" && uv run pytest {{.ARGS}}

  # GitHub tasks
  create-release:
    desc: Create a release on GitHub
    cmds:
      - task: github:create-release
